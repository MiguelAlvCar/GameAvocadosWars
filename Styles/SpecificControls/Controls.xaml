<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="ToggleButtonEinheit" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid HorizontalAlignment="Center" Name="Rahmen" Visibility="Collapsed" UseLayoutRounding="True" VerticalAlignment="Center" Width="240" Height="80">
                            <Grid.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Styles;component/Images/AexteGold.png" Stretch="Uniform"/>
                            </Grid.Background>
                        </Grid>
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="240" Height="80">
                            <Grid.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Styles;component/Images/Aexte.png" Stretch="Uniform"/>
                            </Grid.Background>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="Rahmen" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Visibility" TargetName="Rahmen" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonNextTurn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Canvas Margin="0,0,200,280">
                        <Ellipse Name="ElliBlau" Width="178" Height="180" Margin="10,22,00,00">
                            <Ellipse.Fill>
                                <RadialGradientBrush RadiusX="0.4" RadiusY="0.4">
                                    <GradientStop Offset="0.0" Color="#FF0068FF"/>
                                    <GradientStop Offset="1.0" Color="#FF000064"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Name="ElliRot" Width="178" Height="180" Margin="10,22,00,00">
                            <Ellipse.Fill>
                                <RadialGradientBrush RadiusX="0.4" RadiusY="0.4">
                                    <GradientStop Offset="0.0" Color="#FFFF0000"/>
                                    <GradientStop Offset="1.0" Color="#FF3E0000"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Border CornerRadius="100" Width="200" Height="264">
                            <Border.Background>
                                <ImageBrush Stretch="Uniform" ImageSource="pack://application:,,,/Styles;component/Images/StrukturSkaliert.png"/>
                            </Border.Background>
                        </Border>
                        <Border Name="Clock" CornerRadius="100" Width="200" Height="264">
                            <Border.Background>
                                <ImageBrush Stretch="Uniform" ImageSource="pack://application:,,,/Styles;component/Images/UhrSkaliert.png"/>
                            </Border.Background>
                        </Border>
                        <Border Name="Rahmen" Opacity="0.1" Visibility="Collapsed" CornerRadius="100" Width="200" Height="264">
                            <Border.Background>
                                <ImageBrush Stretch="Uniform" ImageSource="pack://application:,,,/Styles;component/Images/UhrSkaliertWeiss.png"/>
                            </Border.Background>
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ColorTurn}"
                                               Value="Blue"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="ElliRot" Value="0.0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ColorTurn}"
                                               Value="Red"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="ElliRot" Value="0.78"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ColorTurn}"
                                               Value="Blue"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="ElliRot" Value="0.28"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Rahmen" Value="0.2"/>
                            <Setter Property="Visibility" TargetName="Rahmen" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="false"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="Rahmen" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Clock" Value="0.6"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonRot"  TargetType= "{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontFamily" Value="Old English Text MT"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border CornerRadius="15" Background="{TemplateBinding Background}"/>
                        <Rectangle Margin="15,0,15,0" Height="10" VerticalAlignment="Top">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStopCollection>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.0" Color="Red"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Margin="15,0,15,0" Height="10" VerticalAlignment="Bottom">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Offset="0.0" Color="Black"/>
                                    <GradientStop Offset="1.0" Color="Red"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="10" Margin="0,15,0,15" HorizontalAlignment="Left">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0.0" Color="Black"/>
                                    <GradientStop Offset="1.0" Color="Red"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="10" Margin="0,15,0,15" HorizontalAlignment="Right">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="1.0" Color="Black"/>
                                    <GradientStop Offset="0.0" Color="Red"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="Red"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="Red"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="Red"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="Red"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15"/>
                        <Border Name="Opaci" BorderBrush="#313131" BorderThickness="1" CornerRadius="15" Background="Black" Opacity="0.0"/>

                        <Grid Margin="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}">
                            </ContentPresenter>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonBlau"  TargetType= "{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontFamily" Value="Old English Text MT"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Background" Value="#FF003AFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border CornerRadius="15" Background="{TemplateBinding Background}"/>
                        <Rectangle Margin="15,0,15,0" Height="10" VerticalAlignment="Top">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStopCollection>
                                        <!--<GradientStop Color="{Binding Path=Scheme, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomControl1}}" Offset="0"/>
                                <GradientStop Color="#000000" Offset="3"/>-->
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.0" Color="#FF003AFF"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Margin="15,0,15,0" Height="10" VerticalAlignment="Bottom">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Offset="0.0" Color="Black"/>
                                    <GradientStop Offset="1.0" Color="#FF003AFF"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="10" Margin="0,15,0,15" HorizontalAlignment="Left">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0.0" Color="Black"/>
                                    <GradientStop Offset="1.0" Color="#FF003AFF"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="10" Margin="0,15,0,15" HorizontalAlignment="Right">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="1.0" Color="Black"/>
                                    <GradientStop Offset="0.0" Color="#FF003AFF"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="#FF003AFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="#FF003AFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="#FF003AFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Ellipse Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="1.0" Color="Black"/>
                                        <GradientStop Offset="0.33" Color="#FF003AFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15"/>
                        <Border Name="Opaci" BorderBrush="#313131" BorderThickness="1" CornerRadius="15" Background="Black" Opacity="0.0"/>

                        <Grid Margin="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}">
                            </ContentPresenter>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Opaci" Property="Opacity" Value="0.25"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemCurtain"  TargetType= "{x:Type TabItem}">
        <Setter Property="FontSize" Value="34"/>
        <Setter Property="FontFamily" Value="Old English Text MT"/>
        <Setter Property="Margin" Value="0, 15, 0, 0"/>
        <Setter Property="Padding" Value="40,25,40,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Rectangle >
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/Styles;component/Images/TabItem.png" Stretch="Fill"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                        <Rectangle Name="CurtainBlack" Visibility="Collapsed">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/Styles;component/Images/TabItemBlack.png" Stretch="Fill"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Name="CurtainWhite" Visibility="Collapsed">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/Styles;component/Images/TabItemWhite.png" Stretch="Fill"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Name="Curtain" Fill="Transparent"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Curtain}"
                                               Value="true"/>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                                               Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CurtainWhite" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CurtainWhite" Property="Opacity" Value="0.07"/>
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CurtainBlack" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CurtainBlack" Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Margin" Value="-5, 10, -5, 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>  

</ResourceDictionary>